# Group Submission Etude 01 - Syllable Slam

#Members: Dimitar Bankov 
          Josh Casey 
          Uzzie Ozman Shah 
          Chenrong LÃ¼ 

To run:
   - cat testfile.txt | python main.py
Example Input: "test.txt"
        hello
        darkness
        my
        old
        friend
        I
        have
        came
        to
        talk
        with
        you
        again
        shalom 
Example Output:
        2
        2
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        2
        2


To approach the problem, we began by attempting to
filter out all the specific cases of combinations of
letters which is in turn a syllable.
Knowing that, the syllable count in a word is the number
of un-silent vowels, we attempted to filter out the cases
where a vowel is present but silent. Such as double vowels
in "bee" or "see". Josh and Dimitar mainly worked on this approach.
However, Uzzie and Chen worked on a different approach, using the cmu phonems
dictionary to translate the word into phonems, then counting the
number of active vowels in the phonems, this works for all
words which is included in the english dictionary.
Our final approach is a hybrid, where when a word is not found in the
english dictionary we will fall back to our rules approach.

Our rules approach is documented within the file comments.
it adds one to the final syllable count with each vowel,
then rescans the string to identify other features,
which may change the scenario, such as compound vowels: "ee","ie" etc.
and other things such as "lyb" where "y" is surrounded with consonants.
As well as end cases. It is to our assumption that there are
a huge abundant of rules which is required to be implemented,
to ensure high accuracy on just a rules based approach.
So our rules based approach is a fall back from the CMU dict,
and not intended to achieve high accuracy, but rather an educated
guess.

13/1/2019



